{"meta":{"title":"我的精神家园","subtitle":"循此苦旅，以达天际","description":"","author":"Ron Zhou","url":"http://example.com","root":"/"},"pages":[{"title":"文章归档","date":"2022-12-31T16:32:25.311Z","updated":"2022-12-31T16:16:40.580Z","comments":true,"path":"archive.html","permalink":"http://example.com/archive.html","excerpt":"","text":""},{"title":"","date":"2022-11-29T13:32:25.000Z","updated":"2022-12-31T15:54:54.857Z","comments":true,"path":"about.html","permalink":"http://example.com/about.html","excerpt":"","text":"“是你在那朵玫瑰花上耗费的时间和经历，才使得她变得如此重要” ——《小王子》，圣埃克苏佩里 我是谁我是深蓝祝福 90后，一个普通人 喜欢捣鼓水族草缸、玩电子游戏"},{"title":"","date":"2022-11-29T13:32:25.000Z","updated":"2022-12-31T15:54:54.857Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"“是你在那朵玫瑰花上耗费的时间和经历，才使得她变得如此重要” ——《小王子》，圣埃克苏佩里 我是谁我是深蓝祝福 90后，一个普通人 喜欢捣鼓水族草缸、玩电子游戏"},{"title":"links","date":"2023-01-01T07:38:25.000Z","updated":"2023-01-01T07:44:43.920Z","comments":true,"path":"PY.html","permalink":"http://example.com/PY.html","excerpt":"","text":"TEST"}],"posts":[{"title":"2022年度总结","slug":"2022年度总结","date":"2022-12-31T16:20:06.000Z","updated":"2023-01-01T07:35:47.079Z","comments":true,"path":"2023/01/01/2022年度总结/","link":"","permalink":"http://example.com/2023/01/01/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/","excerpt":"","text":"疫情始于2019年12月起的新冠疫情封控，在暗流涌动的舆情中于2022年12月正式画上了一个句号。 核酸、隔离、健康码、行程码在短短一周时间内从我的生活中相继下线，而囤药、抗原、阳性等话题又迅速地占据了我的群聊和朋友圈。新闻里的风向和宣传的转变快的让我有一种不真实的感觉，颇有一种原地挂倒挡倒车的魔幻感。 不过对于我这个已经长久在家和公司两点一线的人来说，似乎没有发生什么变化，该上班还是得上班。 办公室周围的同事陆续发烧居家，在每天的压抑和一丝惶恐中，我也未能幸免，惨遭病毒的感染。虽然已阳康几天，个中滋味，实在不堪回首。 生病的经验是一步步懂得满足。发烧了，才知道不发烧的日子多么清爽。咳嗽了，才体会不咳嗽的嗓子多么安详。 上学时读过史铁生的作品，每次身体不舒服，头疼脑热什么的，总是能想起他的这番文字。每一次的生病，都会对这句话产生一种全新的体验，也提醒我珍惜没病没痛健健康康的每一天，每一小时，每一分钟，每一秒钟。 健康是如此的珍贵，就像阳光和空气，只有失去了的那一刻，才会想起它是多么的重要。所以说，接下来还是要重视疫情，关注自身的身体健康，毕竟结束的是封控，疫情才刚刚开始。 工作作为一个小型制造厂的产品工程师，今年的直观感受是项目需求明显减少，还有一些项目在完成前期评估提交给客户后就杳无音讯，最终导入到量产中的产品数量明显减少，这是从事制造业的我对疫情带来的影响最直观的感受。闲暇之余也会翻看公司的月会报告，发现公司今年的业绩只完成了目标的一半左右，可以推测整个制造业都处于相当不景气的状态，至少在我所处的消费电子领域的生产上下游行业如此。 关于我的工作业务水平，感觉没啥提升，毕竟这个岗位也就那样，属于是到头了，剩下的只有效率和工作量的考量。 今年同事也离职了两位，对于这一点我倒是不意外。年初部门私下聚会的时候，主管就说过今年会很难，也许他们去追求更好的发展前途了吧。不过对于我来说，现在处于一人负责两人工作量的状态，薪水也几乎没有提升，所以跳槽寻找新的机会，也是我2023年的重点计划。 爱好·水族草缸自开缸以来已平稳运行两年多，渐渐的产生了审美疲劳。于是在今年国庆略微地翻了一下缸，将缸里的主沉木去掉了，只留下了两块小的沉木用来定植雨裂。 后景草的宫廷全部连根拔起，重新打头密植，还新加了几种水草，有血红宫廷、蓝精灵辣椒榕、五彩薄荷、西瓜对叶和ADA睡莲。其中ADA睡莲据说能开出果香浓郁的花，在这里先期待一下。 缸里的鱼数量在夏天的时候因为高温损耗了不少，不过一直没有补，我感觉这样也不错，毕竟草缸，还是以水草景观为主。2023打算不做什么大的改动，预计再运行一年，之后可能因为换工作的原因无法继续打理下去。 总结2022过去了，今年是切身体验“时代洪流”的一年，个人无力左右时代的方向，只能裹挟在时代的洪流中滚滚向前。 今年不算太好，也不算太坏，算是疫情下平淡度过的一年吧。 最后，我还是希望2023年能更好吧，在这里先许个找到对象的愿望，嘿嘿~ 希望后面一切都好。 ——2022.12.31.23：49","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"年度总结","slug":"年度总结","permalink":"http://example.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"}]},{"title":"Hexo+Github搭建博客记录","slug":"Hexo-Github搭建博客记录","date":"2022-11-27T14:26:26.000Z","updated":"2022-12-31T16:22:00.822Z","comments":true,"path":"2022/11/27/Hexo-Github搭建博客记录/","link":"","permalink":"http://example.com/2022/11/27/Hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/","excerpt":"","text":"前言网上搭建个人博客的方式和教程有很多，简单一点的有第三方的博客网站，比如简书、CSDN之流，但是使用第三方平台会受到较多的限制，不能随心所欲自定义和个性化，还有各种广告，内容存放在第三方也总是感觉不踏实，不如自建博客令人安心。但是主流的自建博客平台像WordPress需要购买云服务器，成本高昂，还要付出时间成本来维护，对没有相关知识的计算机小白来说还有一定的技术门槛，即使照着网上已经无比丰富详细的教程来搭建，一遇到什么报错还是只能一头雾水地抓瞎，所以这种方式对于普通小白来说，也是不合适的。 那么这里就必须提到本文所使用的基于Hexo+Github搭建博客的方式了，使用这种方法将博客搭建好后上传到Github后就不用再做过多维护，而是可以专注于博客内容本身的撰写了，最重要的是如果不需要绑定自定义域名，可以做到完全免费！本文根据Hexo官方文档和网上的诸多过气教程，记录了我搭建博客的过程，一是记录一下方便以后查阅，二是希望给后来的小伙伴提供一些经验参考，毕竟网上的教程都会随着时间而过气，需要新鲜的经验来补充。博客搭建过程主要有两部分，分别是电脑本地安装Hexo和上传Github。 本地Hexo搭建安装GitGit是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理,在这里相当于博客的上传工具，在后续的过程Git负责将电脑本地硬盘的博客文件上传到Github网站。 Windows：下载并安装 Git,由于官网下载速度很慢，可以使用 淘宝 Git for Windows 镜像 下载 git 安装包。 安装包下载好后双击安装，所有选项都可以使用默认设置，直接一路单击Next，完成安装。这里可以将Git Bash添加进系统自带的Windows Terminal里，这样后续可以直接在文件夹右键打开终端，而不是右键点击显示更多选项再在二级菜单里选择Git Bash(Win11限定)。 安装完成后可以打开Windows Terminal，输入git -v来检查是否安装成功,如果出现以下内容就说明成功了。 安装Node.js由于Hexo是基于Node.js的，所以还需要在电脑里安装Node.js来运行Hexo。 windows：下载稳定版或者最新版都可以Node.js，比较新的Windows系统一般都是选择64位的安装包。 安装选项全部默认，一路点击Next 最后安装好之后，打开Windows Terminal，输入node -v和npm -v，检查一下是否安装成功，这里显示的刚刚安装的软件版本号，出现以下内容就说明成功了。 安装Hexo安装完上述两个软件后，就可以进行Hexo的安装了。首先需要在磁盘新建一个文件夹来存放接下来安装的Hexo文件，比如在D盘新建一个空白MyBlog文件夹，打开这个文件夹，右键菜单Git Bash Here选项打开命令行。当然也可以使用终端命令行直接进入。 cd D:/MyBlog 之后进行安装Hexo,输入命令 npm install -g hexo-cli 安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 $ hexo init MyBlog $ cd MyBlog $ npm install 新建完成后，指定文件夹的目录如下： . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes 安装完后终端输入hexo g生成静态网页，hexo S 打开本地服务器测试，然后浏览器打开本地测试页面，就可以看到Hexo的默认博客界面，效果如下： 初始界面能成功打开就说明本地的博客框架已经搭建好了，最后终端按ctrl+c关闭本地服务器完成测试。 上传Github在本地博客搭建完毕之后，需要注册一个Github账号用来上传，相当于是网站的服务器了，不过是免费白嫖的。话说疼讯云服务器的新用户优惠是真滴大，在我还是年少懵懂的时候脑子一热血气上涌花了300大洋买了三年服务器，捣鼓了一会个人博客然后就。。。荒废了三年，现在续费要2k,于是我只能麻溜的滚蛋了，好在还有Github这个全球最大的同性交友网站来拯救我的博客。 新建仓库首先注册一个GitHub账号,然后点击加号新建一个项目仓库，如下图 然后如下图所示，输入自己的项目名字，后面一定要加.github.io后缀，比如说我的账户名称是ronzhouzxr,仓库名称一定要是ronzhouzxr.github.io这个格式；公开选项默认是Public不用动，这个是让任何人都能看见这个仓库；README初始化也要勾上，最后点击Creat repository按钮完成新建仓库。 项目建成之后，在浏览器地址栏输入刚刚的项目名称来测试，如ronzhouzxr.github.io, 可以看到一个只有这个项目名称的网页，出现这个界面，说明用来存放上传博客文件的项目仓库创建成功。 生成SSHssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 生成SSH添加到GitHub，连接Github与本地。右键打开git bash，然后输入下面命令： git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot; 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。例如我的： git config --global user.name &quot;ronzhouzxr&quot; #双引号里的就是注册的Github用户名 git config --global user.email &quot;1835944564@qq.com&quot; #双引号里的就是注册的Github邮箱账号 可以用以下两条，检查一下你有没有输对 git config user.name git config user.email 然后创建SSH,生成密钥SSH key： ssh-keygen -t rsa -C &quot;1835944564@qq.com&quot; 这个时候它会告诉你已经生成了.ssh的文件夹，本地存放路径如图会显示出来。接下来要把生成的ssh公匙复制到Github里，但是在电脑里用记事本打开复制ssh公匙是不行的，因为直接从id_rsa.pub中复制公匙时会改变他的格式，在我们向Github添加公匙时会出现“Key is invalid. You must supply a key in OpenSSH public key format”的报错提示，所以我们不能直接用快捷键复制粘贴。 需要在终端中输入如下命令， cat ~/.ssh/id_rsa.pub 终端会输出公匙，如下图，这里我做了马赛克处理， 然后打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，这里我直接命名为blog，把刚刚终端输出的id_rsa.pub里面的信息复制进去。如图： 在git bash输入ssh -T git@github.com，如果如下图所示，出现你的用户名，那就成功了。 上传博客这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。 修改最后一行的配置： deploy: type: git repository: https://github.com/ronzhouzxr/ronzhouzxr.github.io branch: main 值得一提的是现在Github的默认分支是main而不是master,如果在后续博客上传过程中发现之前初始的用户名.github.io界面没有变化，而仓库的分支变成了两个，那你很可能是网上过气教程的受害者,以下是过气教程的配置： deploy: type: git repository: https://github.com/ronzhouzxr/ronzhouzxr.github.io branch: master #github于2020年10月1日后,修改默认分支为main repository修改为你自己的github项目地址即可，就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 npm install hexo-deployer-git --save 然后在终端依次执行以下命令， hexo clean hexo generate hexo deploy 其中 hexo clean清除了你之前本地调试时生成的内容，也可以不加。 hexo generate顾名思义，生成静态文章，可以用 hexo g缩写 ，hexo deploy部署文章，可以用hexo d缩写。 在执行hexo deploy命令时可能要你输入username和password,这是要用Github账户登录Git，会跳出以下界面， 左边这个默认选项会跳转浏览器，然后会跳出两个窗口依次让你输入Github的账号用户名和密码，之后浏览器会提示登录成功，然而返回终端看见上传过程失败了，会跳以下的报错信息， 根据报错信息，大意是对于密码认证的支持已经在2021&#x2F;8&#x2F;13停止了，必须使用个人访问令牌（personal access token），就是token方式来登录！也就是刚刚跳出来登录Github的界面要选择右边的token方式， 所以还需要在Github中先生成一个token用来登录，先到Github的Settings页面，点击最下面的develop settings， 来到如下页面，点击token选项，Note项随便取一个就行了，Expiration是选择token有效期，这里我选了60天，也可选不限期的或者其他时长，select scopes范围选项选取图中的repo项就行了。 最后生成了一个token,点击token旁边的复制按钮先复制到其他地方，比如新建一个记事本先把这个token密钥复制一下，因为Github提示这个只会显示一次，离开这个界面就不会再显示了。 复制好token后返回到终端，重新执行hexo d命令，在跳出登录界面后选择token方式登录，把复制好的token复制到文本框里点击Sign in按钮登录，最后终端执行完hexo d命令后出现如下信息，就说明上传成功了！ 先来到Github仓库页面确认一下，出现以下文件，即电脑本地博客文件夹下的Public文件夹里的文件，说明上传成功， 现在可以在浏览器地址栏输入博客的网址用户名.github.io，会发现原来只有一个名称的空白界面已经被博客的初始界面替代了，如下图（我的已经导入了一个主题，没有主题的话，就是hexo的初始默认页面）， 如此，上传博客的工作就已经大功告成。 总结完成了以上内容，博客的框架就已经搭建好了，现在可以自由地写作并用博客上传了，enjoy it!","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-11-13T06:25:49.233Z","updated":"2022-11-13T06:25:49.234Z","comments":true,"path":"2022/11/13/hello-world/","link":"","permalink":"http://example.com/2022/11/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"年度总结","slug":"年度总结","permalink":"http://example.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"}]}